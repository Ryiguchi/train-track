"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkoutRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const Exercise_1 = require("../../../models/Exercise");
const Workout_1 = require("../../../models/Workout");
const WorkoutExerciseArgs_1 = require("./args/WorkoutExerciseArgs");
const helpers_1 = require("../../../helpers");
let WorkoutRelationsResolver = class WorkoutRelationsResolver {
    async exercise(workout, ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).workout.findUniqueOrThrow({
            where: {
                id: workout.id,
            },
        }).exercise({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
exports.WorkoutRelationsResolver = WorkoutRelationsResolver;
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => Exercise_1.Exercise, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Info()),
    tslib_1.__param(3, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Workout_1.Workout, Object, Object, WorkoutExerciseArgs_1.WorkoutExerciseArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], WorkoutRelationsResolver.prototype, "exercise", null);
exports.WorkoutRelationsResolver = WorkoutRelationsResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Workout_1.Workout)
], WorkoutRelationsResolver);
