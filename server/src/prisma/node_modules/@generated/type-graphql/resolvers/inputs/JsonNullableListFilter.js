"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonNullableListFilter = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const GraphQLScalars = tslib_1.__importStar(require("graphql-scalars"));
const client_1 = require("@prisma/client");
let JsonNullableListFilter = class JsonNullableListFilter {
    equals;
    has;
    hasEvery;
    hasSome;
    isEmpty;
};
exports.JsonNullableListFilter = JsonNullableListFilter;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GraphQLScalars.JSONResolver], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], JsonNullableListFilter.prototype, "equals", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GraphQLScalars.JSONResolver, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Object)
], JsonNullableListFilter.prototype, "has", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GraphQLScalars.JSONResolver], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], JsonNullableListFilter.prototype, "hasEvery", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GraphQLScalars.JSONResolver], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], JsonNullableListFilter.prototype, "hasSome", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => Boolean, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Boolean)
], JsonNullableListFilter.prototype, "isEmpty", void 0);
exports.JsonNullableListFilter = JsonNullableListFilter = tslib_1.__decorate([
    TypeGraphQL.InputType("JsonNullableListFilter", {})
], JsonNullableListFilter);
