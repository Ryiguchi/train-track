"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupWhereInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ExerciseListRelationFilter_1 = require("../inputs/ExerciseListRelationFilter");
const IntFilter_1 = require("../inputs/IntFilter");
const ScheduleListRelationFilter_1 = require("../inputs/ScheduleListRelationFilter");
const StringFilter_1 = require("../inputs/StringFilter");
let GroupWhereInput = class GroupWhereInput {
    AND;
    OR;
    NOT;
    id;
    name;
    Exercise;
    Schedule;
};
exports.GroupWhereInput = GroupWhereInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupWhereInput.prototype, "AND", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupWhereInput.prototype, "OR", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupWhereInput.prototype, "NOT", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntFilter_1.IntFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntFilter_1.IntFilter)
], GroupWhereInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], GroupWhereInput.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ExerciseListRelationFilter_1.ExerciseListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ExerciseListRelationFilter_1.ExerciseListRelationFilter)
], GroupWhereInput.prototype, "Exercise", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleListRelationFilter_1.ScheduleListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleListRelationFilter_1.ScheduleListRelationFilter)
], GroupWhereInput.prototype, "Schedule", void 0);
exports.GroupWhereInput = GroupWhereInput = tslib_1.__decorate([
    TypeGraphQL.InputType("GroupWhereInput", {})
], GroupWhereInput);
