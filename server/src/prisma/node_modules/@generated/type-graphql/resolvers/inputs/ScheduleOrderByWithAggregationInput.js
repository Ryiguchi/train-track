"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduleOrderByWithAggregationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ScheduleAvgOrderByAggregateInput_1 = require("../inputs/ScheduleAvgOrderByAggregateInput");
const ScheduleCountOrderByAggregateInput_1 = require("../inputs/ScheduleCountOrderByAggregateInput");
const ScheduleMaxOrderByAggregateInput_1 = require("../inputs/ScheduleMaxOrderByAggregateInput");
const ScheduleMinOrderByAggregateInput_1 = require("../inputs/ScheduleMinOrderByAggregateInput");
const ScheduleSumOrderByAggregateInput_1 = require("../inputs/ScheduleSumOrderByAggregateInput");
const SortOrder_1 = require("../../enums/SortOrder");
let ScheduleOrderByWithAggregationInput = class ScheduleOrderByWithAggregationInput {
    id;
    date;
    groupId;
    _count;
    _avg;
    _max;
    _min;
    _sum;
};
exports.ScheduleOrderByWithAggregationInput = ScheduleOrderByWithAggregationInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], ScheduleOrderByWithAggregationInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], ScheduleOrderByWithAggregationInput.prototype, "date", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], ScheduleOrderByWithAggregationInput.prototype, "groupId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleCountOrderByAggregateInput_1.ScheduleCountOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleCountOrderByAggregateInput_1.ScheduleCountOrderByAggregateInput)
], ScheduleOrderByWithAggregationInput.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleAvgOrderByAggregateInput_1.ScheduleAvgOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleAvgOrderByAggregateInput_1.ScheduleAvgOrderByAggregateInput)
], ScheduleOrderByWithAggregationInput.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleMaxOrderByAggregateInput_1.ScheduleMaxOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleMaxOrderByAggregateInput_1.ScheduleMaxOrderByAggregateInput)
], ScheduleOrderByWithAggregationInput.prototype, "_max", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleMinOrderByAggregateInput_1.ScheduleMinOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleMinOrderByAggregateInput_1.ScheduleMinOrderByAggregateInput)
], ScheduleOrderByWithAggregationInput.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleSumOrderByAggregateInput_1.ScheduleSumOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleSumOrderByAggregateInput_1.ScheduleSumOrderByAggregateInput)
], ScheduleOrderByWithAggregationInput.prototype, "_sum", void 0);
exports.ScheduleOrderByWithAggregationInput = ScheduleOrderByWithAggregationInput = tslib_1.__decorate([
    TypeGraphQL.InputType("ScheduleOrderByWithAggregationInput", {})
], ScheduleOrderByWithAggregationInput);
