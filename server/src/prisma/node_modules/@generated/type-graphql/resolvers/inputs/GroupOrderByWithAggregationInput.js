"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupOrderByWithAggregationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const GroupAvgOrderByAggregateInput_1 = require("../inputs/GroupAvgOrderByAggregateInput");
const GroupCountOrderByAggregateInput_1 = require("../inputs/GroupCountOrderByAggregateInput");
const GroupMaxOrderByAggregateInput_1 = require("../inputs/GroupMaxOrderByAggregateInput");
const GroupMinOrderByAggregateInput_1 = require("../inputs/GroupMinOrderByAggregateInput");
const GroupSumOrderByAggregateInput_1 = require("../inputs/GroupSumOrderByAggregateInput");
const SortOrder_1 = require("../../enums/SortOrder");
let GroupOrderByWithAggregationInput = class GroupOrderByWithAggregationInput {
    id;
    name;
    _count;
    _avg;
    _max;
    _min;
    _sum;
};
exports.GroupOrderByWithAggregationInput = GroupOrderByWithAggregationInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], GroupOrderByWithAggregationInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], GroupOrderByWithAggregationInput.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupCountOrderByAggregateInput_1.GroupCountOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupCountOrderByAggregateInput_1.GroupCountOrderByAggregateInput)
], GroupOrderByWithAggregationInput.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupAvgOrderByAggregateInput_1.GroupAvgOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupAvgOrderByAggregateInput_1.GroupAvgOrderByAggregateInput)
], GroupOrderByWithAggregationInput.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupMaxOrderByAggregateInput_1.GroupMaxOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupMaxOrderByAggregateInput_1.GroupMaxOrderByAggregateInput)
], GroupOrderByWithAggregationInput.prototype, "_max", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupMinOrderByAggregateInput_1.GroupMinOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupMinOrderByAggregateInput_1.GroupMinOrderByAggregateInput)
], GroupOrderByWithAggregationInput.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupSumOrderByAggregateInput_1.GroupSumOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupSumOrderByAggregateInput_1.GroupSumOrderByAggregateInput)
], GroupOrderByWithAggregationInput.prototype, "_sum", void 0);
exports.GroupOrderByWithAggregationInput = GroupOrderByWithAggregationInput = tslib_1.__decorate([
    TypeGraphQL.InputType("GroupOrderByWithAggregationInput", {})
], GroupOrderByWithAggregationInput);
