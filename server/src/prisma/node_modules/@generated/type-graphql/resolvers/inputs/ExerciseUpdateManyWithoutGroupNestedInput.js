"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExerciseUpdateManyWithoutGroupNestedInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ExerciseCreateManyGroupInputEnvelope_1 = require("../inputs/ExerciseCreateManyGroupInputEnvelope");
const ExerciseCreateOrConnectWithoutGroupInput_1 = require("../inputs/ExerciseCreateOrConnectWithoutGroupInput");
const ExerciseCreateWithoutGroupInput_1 = require("../inputs/ExerciseCreateWithoutGroupInput");
const ExerciseScalarWhereInput_1 = require("../inputs/ExerciseScalarWhereInput");
const ExerciseUpdateManyWithWhereWithoutGroupInput_1 = require("../inputs/ExerciseUpdateManyWithWhereWithoutGroupInput");
const ExerciseUpdateWithWhereUniqueWithoutGroupInput_1 = require("../inputs/ExerciseUpdateWithWhereUniqueWithoutGroupInput");
const ExerciseUpsertWithWhereUniqueWithoutGroupInput_1 = require("../inputs/ExerciseUpsertWithWhereUniqueWithoutGroupInput");
const ExerciseWhereUniqueInput_1 = require("../inputs/ExerciseWhereUniqueInput");
let ExerciseUpdateManyWithoutGroupNestedInput = class ExerciseUpdateManyWithoutGroupNestedInput {
    create;
    connectOrCreate;
    upsert;
    createMany;
    set;
    disconnect;
    delete;
    connect;
    update;
    updateMany;
    deleteMany;
};
exports.ExerciseUpdateManyWithoutGroupNestedInput = ExerciseUpdateManyWithoutGroupNestedInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseCreateWithoutGroupInput_1.ExerciseCreateWithoutGroupInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseCreateOrConnectWithoutGroupInput_1.ExerciseCreateOrConnectWithoutGroupInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseUpsertWithWhereUniqueWithoutGroupInput_1.ExerciseUpsertWithWhereUniqueWithoutGroupInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "upsert", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ExerciseCreateManyGroupInputEnvelope_1.ExerciseCreateManyGroupInputEnvelope, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ExerciseCreateManyGroupInputEnvelope_1.ExerciseCreateManyGroupInputEnvelope)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "createMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseWhereUniqueInput_1.ExerciseWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "set", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseWhereUniqueInput_1.ExerciseWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "disconnect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseWhereUniqueInput_1.ExerciseWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "delete", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseWhereUniqueInput_1.ExerciseWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "connect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseUpdateWithWhereUniqueWithoutGroupInput_1.ExerciseUpdateWithWhereUniqueWithoutGroupInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseUpdateManyWithWhereWithoutGroupInput_1.ExerciseUpdateManyWithWhereWithoutGroupInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "updateMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseScalarWhereInput_1.ExerciseScalarWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], ExerciseUpdateManyWithoutGroupNestedInput.prototype, "deleteMany", void 0);
exports.ExerciseUpdateManyWithoutGroupNestedInput = ExerciseUpdateManyWithoutGroupNestedInput = tslib_1.__decorate([
    TypeGraphQL.InputType("ExerciseUpdateManyWithoutGroupNestedInput", {})
], ExerciseUpdateManyWithoutGroupNestedInput);
