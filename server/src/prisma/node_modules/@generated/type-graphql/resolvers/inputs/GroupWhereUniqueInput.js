"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupWhereUniqueInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ExerciseListRelationFilter_1 = require("../inputs/ExerciseListRelationFilter");
const GroupWhereInput_1 = require("../inputs/GroupWhereInput");
const ScheduleListRelationFilter_1 = require("../inputs/ScheduleListRelationFilter");
let GroupWhereUniqueInput = class GroupWhereUniqueInput {
    id;
    name;
    AND;
    OR;
    NOT;
    Exercise;
    Schedule;
};
exports.GroupWhereUniqueInput = GroupWhereUniqueInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupWhereUniqueInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], GroupWhereUniqueInput.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupWhereInput_1.GroupWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupWhereUniqueInput.prototype, "AND", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupWhereInput_1.GroupWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupWhereUniqueInput.prototype, "OR", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupWhereInput_1.GroupWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupWhereUniqueInput.prototype, "NOT", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ExerciseListRelationFilter_1.ExerciseListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ExerciseListRelationFilter_1.ExerciseListRelationFilter)
], GroupWhereUniqueInput.prototype, "Exercise", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleListRelationFilter_1.ScheduleListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleListRelationFilter_1.ScheduleListRelationFilter)
], GroupWhereUniqueInput.prototype, "Schedule", void 0);
exports.GroupWhereUniqueInput = GroupWhereUniqueInput = tslib_1.__decorate([
    TypeGraphQL.InputType("GroupWhereUniqueInput", {})
], GroupWhereUniqueInput);
