"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateExerciseResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AggregateExerciseArgs_1 = require("./args/AggregateExerciseArgs");
const Exercise_1 = require("../../../models/Exercise");
const AggregateExercise_1 = require("../../outputs/AggregateExercise");
const helpers_1 = require("../../../helpers");
let AggregateExerciseResolver = class AggregateExerciseResolver {
    async aggregateExercise(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).exercise.aggregate({
            ...args,
            ...(0, helpers_1.transformInfoIntoPrismaArgs)(info),
        });
    }
};
exports.AggregateExerciseResolver = AggregateExerciseResolver;
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateExercise_1.AggregateExercise, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateExerciseArgs_1.AggregateExerciseArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], AggregateExerciseResolver.prototype, "aggregateExercise", null);
exports.AggregateExerciseResolver = AggregateExerciseResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Exercise_1.Exercise)
], AggregateExerciseResolver);
