"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByGroupArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const GroupOrderByWithAggregationInput_1 = require("../../../inputs/GroupOrderByWithAggregationInput");
const GroupScalarWhereWithAggregatesInput_1 = require("../../../inputs/GroupScalarWhereWithAggregatesInput");
const GroupWhereInput_1 = require("../../../inputs/GroupWhereInput");
const GroupScalarFieldEnum_1 = require("../../../../enums/GroupScalarFieldEnum");
let GroupByGroupArgs = class GroupByGroupArgs {
    where;
    orderBy;
    by;
    having;
    take;
    skip;
};
exports.GroupByGroupArgs = GroupByGroupArgs;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupWhereInput_1.GroupWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupWhereInput_1.GroupWhereInput)
], GroupByGroupArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupOrderByWithAggregationInput_1.GroupOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByGroupArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GroupScalarFieldEnum_1.GroupScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByGroupArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupScalarWhereWithAggregatesInput_1.GroupScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupScalarWhereWithAggregatesInput_1.GroupScalarWhereWithAggregatesInput)
], GroupByGroupArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByGroupArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByGroupArgs.prototype, "skip", void 0);
exports.GroupByGroupArgs = GroupByGroupArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByGroupArgs);
