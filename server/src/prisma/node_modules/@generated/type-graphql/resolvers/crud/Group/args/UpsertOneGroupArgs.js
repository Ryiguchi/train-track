"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpsertOneGroupArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const GroupCreateInput_1 = require("../../../inputs/GroupCreateInput");
const GroupUpdateInput_1 = require("../../../inputs/GroupUpdateInput");
const GroupWhereUniqueInput_1 = require("../../../inputs/GroupWhereUniqueInput");
let UpsertOneGroupArgs = class UpsertOneGroupArgs {
    where;
    create;
    update;
};
exports.UpsertOneGroupArgs = UpsertOneGroupArgs;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupWhereUniqueInput_1.GroupWhereUniqueInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", GroupWhereUniqueInput_1.GroupWhereUniqueInput)
], UpsertOneGroupArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupCreateInput_1.GroupCreateInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", GroupCreateInput_1.GroupCreateInput)
], UpsertOneGroupArgs.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupUpdateInput_1.GroupUpdateInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", GroupUpdateInput_1.GroupUpdateInput)
], UpsertOneGroupArgs.prototype, "update", void 0);
exports.UpsertOneGroupArgs = UpsertOneGroupArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], UpsertOneGroupArgs);
