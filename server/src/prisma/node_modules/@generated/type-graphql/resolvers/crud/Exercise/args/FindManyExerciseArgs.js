"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyExerciseArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ExerciseOrderByWithRelationInput_1 = require("../../../inputs/ExerciseOrderByWithRelationInput");
const ExerciseWhereInput_1 = require("../../../inputs/ExerciseWhereInput");
const ExerciseWhereUniqueInput_1 = require("../../../inputs/ExerciseWhereUniqueInput");
const ExerciseScalarFieldEnum_1 = require("../../../../enums/ExerciseScalarFieldEnum");
let FindManyExerciseArgs = class FindManyExerciseArgs {
    where;
    orderBy;
    cursor;
    take;
    skip;
    distinct;
};
exports.FindManyExerciseArgs = FindManyExerciseArgs;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ExerciseWhereInput_1.ExerciseWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ExerciseWhereInput_1.ExerciseWhereInput)
], FindManyExerciseArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseOrderByWithRelationInput_1.ExerciseOrderByWithRelationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindManyExerciseArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ExerciseWhereUniqueInput_1.ExerciseWhereUniqueInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ExerciseWhereUniqueInput_1.ExerciseWhereUniqueInput)
], FindManyExerciseArgs.prototype, "cursor", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindManyExerciseArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindManyExerciseArgs.prototype, "skip", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ExerciseScalarFieldEnum_1.ExerciseScalarFieldEnum], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindManyExerciseArgs.prototype, "distinct", void 0);
exports.FindManyExerciseArgs = FindManyExerciseArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], FindManyExerciseArgs);
