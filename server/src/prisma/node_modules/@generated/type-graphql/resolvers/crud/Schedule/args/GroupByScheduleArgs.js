"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByScheduleArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ScheduleOrderByWithAggregationInput_1 = require("../../../inputs/ScheduleOrderByWithAggregationInput");
const ScheduleScalarWhereWithAggregatesInput_1 = require("../../../inputs/ScheduleScalarWhereWithAggregatesInput");
const ScheduleWhereInput_1 = require("../../../inputs/ScheduleWhereInput");
const ScheduleScalarFieldEnum_1 = require("../../../../enums/ScheduleScalarFieldEnum");
let GroupByScheduleArgs = class GroupByScheduleArgs {
    where;
    orderBy;
    by;
    having;
    take;
    skip;
};
exports.GroupByScheduleArgs = GroupByScheduleArgs;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleWhereInput_1.ScheduleWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleWhereInput_1.ScheduleWhereInput)
], GroupByScheduleArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ScheduleOrderByWithAggregationInput_1.ScheduleOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByScheduleArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ScheduleScalarFieldEnum_1.ScheduleScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByScheduleArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ScheduleScalarWhereWithAggregatesInput_1.ScheduleScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ScheduleScalarWhereWithAggregatesInput_1.ScheduleScalarWhereWithAggregatesInput)
], GroupByScheduleArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByScheduleArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByScheduleArgs.prototype, "skip", void 0);
exports.GroupByScheduleArgs = GroupByScheduleArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByScheduleArgs);
