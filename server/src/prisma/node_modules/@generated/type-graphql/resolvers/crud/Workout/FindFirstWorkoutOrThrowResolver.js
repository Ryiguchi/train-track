"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindFirstWorkoutOrThrowResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const FindFirstWorkoutOrThrowArgs_1 = require("./args/FindFirstWorkoutOrThrowArgs");
const Workout_1 = require("../../../models/Workout");
const helpers_1 = require("../../../helpers");
let FindFirstWorkoutOrThrowResolver = class FindFirstWorkoutOrThrowResolver {
    async findFirstWorkoutOrThrow(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).workout.findFirstOrThrow({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
exports.FindFirstWorkoutOrThrowResolver = FindFirstWorkoutOrThrowResolver;
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => Workout_1.Workout, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindFirstWorkoutOrThrowArgs_1.FindFirstWorkoutOrThrowArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FindFirstWorkoutOrThrowResolver.prototype, "findFirstWorkoutOrThrow", null);
exports.FindFirstWorkoutOrThrowResolver = FindFirstWorkoutOrThrowResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Workout_1.Workout)
], FindFirstWorkoutOrThrowResolver);
