"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkoutGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const GraphQLScalars = tslib_1.__importStar(require("graphql-scalars"));
const WorkoutAvgAggregate_1 = require("../outputs/WorkoutAvgAggregate");
const WorkoutCountAggregate_1 = require("../outputs/WorkoutCountAggregate");
const WorkoutMaxAggregate_1 = require("../outputs/WorkoutMaxAggregate");
const WorkoutMinAggregate_1 = require("../outputs/WorkoutMinAggregate");
const WorkoutSumAggregate_1 = require("../outputs/WorkoutSumAggregate");
let WorkoutGroupBy = class WorkoutGroupBy {
    id;
    date;
    sets;
    exerciseId;
    _count;
    _avg;
    _sum;
    _min;
    _max;
};
exports.WorkoutGroupBy = WorkoutGroupBy;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], WorkoutGroupBy.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Date)
], WorkoutGroupBy.prototype, "date", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [GraphQLScalars.JSONResolver], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], WorkoutGroupBy.prototype, "sets", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], WorkoutGroupBy.prototype, "exerciseId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => WorkoutCountAggregate_1.WorkoutCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", WorkoutCountAggregate_1.WorkoutCountAggregate)
], WorkoutGroupBy.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => WorkoutAvgAggregate_1.WorkoutAvgAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", WorkoutAvgAggregate_1.WorkoutAvgAggregate)
], WorkoutGroupBy.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => WorkoutSumAggregate_1.WorkoutSumAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", WorkoutSumAggregate_1.WorkoutSumAggregate)
], WorkoutGroupBy.prototype, "_sum", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => WorkoutMinAggregate_1.WorkoutMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", WorkoutMinAggregate_1.WorkoutMinAggregate)
], WorkoutGroupBy.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => WorkoutMaxAggregate_1.WorkoutMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", WorkoutMaxAggregate_1.WorkoutMaxAggregate)
], WorkoutGroupBy.prototype, "_max", void 0);
exports.WorkoutGroupBy = WorkoutGroupBy = tslib_1.__decorate([
    TypeGraphQL.ObjectType("WorkoutGroupBy", {})
], WorkoutGroupBy);
