"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateGroup = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const GroupAvgAggregate_1 = require("../outputs/GroupAvgAggregate");
const GroupCountAggregate_1 = require("../outputs/GroupCountAggregate");
const GroupMaxAggregate_1 = require("../outputs/GroupMaxAggregate");
const GroupMinAggregate_1 = require("../outputs/GroupMinAggregate");
const GroupSumAggregate_1 = require("../outputs/GroupSumAggregate");
let AggregateGroup = class AggregateGroup {
    _count;
    _avg;
    _sum;
    _min;
    _max;
};
exports.AggregateGroup = AggregateGroup;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupCountAggregate_1.GroupCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupCountAggregate_1.GroupCountAggregate)
], AggregateGroup.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupAvgAggregate_1.GroupAvgAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupAvgAggregate_1.GroupAvgAggregate)
], AggregateGroup.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupSumAggregate_1.GroupSumAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupSumAggregate_1.GroupSumAggregate)
], AggregateGroup.prototype, "_sum", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupMinAggregate_1.GroupMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupMinAggregate_1.GroupMinAggregate)
], AggregateGroup.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => GroupMaxAggregate_1.GroupMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", GroupMaxAggregate_1.GroupMaxAggregate)
], AggregateGroup.prototype, "_max", void 0);
exports.AggregateGroup = AggregateGroup = tslib_1.__decorate([
    TypeGraphQL.ObjectType("AggregateGroup", {})
], AggregateGroup);
